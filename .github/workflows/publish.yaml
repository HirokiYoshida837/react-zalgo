name: Publish

permissions:
  contents: write

on:
  release:
    types: [created]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-packages:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 15.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: run esbuild
        run: npm run build

      - name: run build:types
        run: npm run build:types

      - uses: actions/upload-artifact@v3
        with:
          name: packages_${{github.sha}}
          path: ./dist

  deploy-package-dryrun:
    needs: [build-packages]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 15.x
          cache: "npm"
          registry-url: "https://registry.npmjs.org"
          scope: "@hyoshida"

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: packages_${{github.sha}}
          path: ./dist

      - name: "Echo download path"
        run: echo ${{steps.download.outputs.download-path}}

      - name: "dry-run"
        run: npm publish --dry-run --verbose

  deploy-package:
    needs: [deploy-package-dryrun]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 15.x
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: packages_${{github.sha}}
          path: ./dist

      - name: "Echo download path"
        run: echo ${{steps.download.outputs.download-path}}

      - name: "publish"
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
